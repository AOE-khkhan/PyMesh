version: 2
jobs:
    "py3.7":
        machine: true
        steps:
            - checkout
            - run:
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASS
                    docker build -m 6g -t pymesh/pymesh:py3.7 --build-arg NUM_CORES=1 --build-arg BRANCH=$CIRCLE_BRANCH docker/py3.7
                    [ "$CIRCLE_BRANCH" != "master" ] || docker push pymesh/pymesh:py3.7
                no_output_timeout: 1200
    "py3.7-slim":
        machine: true
        steps:
            - checkout
            - run: |
                cd docker/py3.7-slim
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                ./build.sh
                docker push pymesh/pymesh:py3.7-slim
    "py3.7-test":
        machine: true
        steps:
            - run: |
                docker run -it --rm pymesh/pymesh:py3.7-slim python -c "import pymesh; pymesh.test()"
    "py3.6":
        machine: true
        steps:
            - checkout
            - run:
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASS
                    docker build -m 6g -t pymesh/pymesh:py3.6 --build-arg NUM_CORES=1 --build-arg BRANCH=$CIRCLE_BRANCH docker/py3.6
                    [ "$CIRCLE_BRANCH" != "master" ] || docker push pymesh/pymesh:py3.6
                no_output_timeout: 1200
    "py3.6-slim":
        machine: true
        steps:
            - checkout
            - run: |
                cd docker/py3.6-slim
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                ./build.sh
                docker push pymesh/pymesh:py3.6-slim
                docker tag pymesh/pymesh:py3.6-slim pymesh/pymesh
                docker push pymesh/pymesh
    "py3.6-test":
        machine: true
        steps:
            - run: |
                docker run -it --rm pymesh/pymesh:py3.6-slim python -c "import pymesh; pymesh.test()"
    "py3.5":
        machine: true
        steps:
            - checkout
            - run:
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASS
                    docker build -m 6g -t pymesh/pymesh:py3.5 --build-arg NUM_CORES=1 --build-arg BRANCH=$CIRCLE_BRANCH docker/py3.5
                    [ "$CIRCLE_BRANCH" != "master" ] || docker push pymesh/pymesh:py3.5
                no_output_timeout: 1200
    "py3.5-slim":
        machine: true
        steps:
            - checkout
            - run: |
                cd docker/py3.5-slim
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                ./build.sh
                docker push pymesh/pymesh:py3.5-slim
    "py3.5-test":
        machine: true
        steps:
            - run: |
                docker run -it --rm pymesh/pymesh:py3.5-slim python -c "import pymesh; pymesh.test()"
    "py2.7":
        machine: true
        steps:
            - checkout
            - run:
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASS
                    docker build -m 6g -t pymesh/pymesh:py2.7 --build-arg NUM_CORES=1 --build-arg BRANCH=$CIRCLE_BRANCH docker/py2.7
                    [ "$CIRCLE_BRANCH" != "master" ] || docker push pymesh/pymesh:py2.7
                no_output_timeout: 1200
    "py2.7-slim":
        machine: true
        steps:
            - checkout
            - run: |
                cd docker/py2.7-slim
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                ./build.sh
                docker push pymesh/pymesh:py2.7-slim
    "py2.7-test":
        machine: true
        steps:
            - run: |
                docker run -it --rm pymesh/pymesh:py2.7-slim python -c "import pymesh; pymesh.test()"

workflows:
    version: 2
    build_and_test_and_deploy:
        jobs:
            - "py3.7":
                filters:
                    branches:
                        only: master
            - "py3.6"
            - "py3.5":
                filters:
                    branches:
                        only: master
            - "py2.7":
                filters:
                    branches:
                        only: master
            - "py3.7-slim":
                requires:
                    - "py3.7"
                filters:
                    branches:
                        only: master
            - "py3.6-slim":
                requires:
                    - "py3.6"
                filters:
                    branches:
                        only: master
            - "py3.5-slim":
                requires:
                    - "py3.5"
                filters:
                    branches:
                        only: master
            - "py2.7-slim":
                requires:
                    - "py2.7"
                filters:
                    branches:
                        only: master
            - "py3.7-test":
                requires:
                    - "py3.7-slim"
            - "py3.6-test":
                requires:
                    - "py3.6-slim"
            - "py3.5-test":
                requires:
                    - "py3.5-slim"
            - "py2.7-test":
                requires:
                    - "py2.7-slim"

